diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/modules/core/etc/acinclude.m4 livesupport-x/modules/core/etc/acinclude.m4
--- livesupport/modules/core/etc/acinclude.m4	2005-09-20 12:46:39.000000000 +0200
+++ livesupport-x/modules/core/etc/acinclude.m4	2005-09-19 16:33:28.000000000 +0200
@@ -91,6 +91,122 @@
 
 
 dnl-----------------------------------------------------------------------------
+dnl Macro to check for taglib of sufficient version by looking at taglib-config
+dnl
+dnl usage:
+dnl AC_CHECK_TAGLIB(version, action-if, action-not)
+dnl
+dnl defines TAGLIB_LIBS, TAGLIB_CFLAGS, see taglib-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_TAGLIB], [
+  succeeded=no
+
+  if test -z "$TAGLIB_CONFIG"; then
+    AC_PATH_PROG(TAGLIB_CONFIG, taglib-config, no)
+  fi
+
+  if test "$TAGLIB_CONFIG" = "no" ; then
+    echo "*** The taglib-config script could not be found. Make sure it is"
+    echo "*** in your path, and that taglib is properly installed."
+    echo "*** Or see http://developer.kde.org/~wheeler/taglib.html"
+  else
+    TAGLIB_VERSION=`$TAGLIB_CONFIG --version`
+    AC_MSG_CHECKING(for taglib >= $1)
+        VERSION_CHECK=`expr $TAGLIB_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(TAGLIB_CFLAGS)
+            TAGLIB_CFLAGS=`$TAGLIB_CONFIG --cflags`
+            AC_MSG_RESULT($TAGLIB_CFLAGS)
+
+            AC_MSG_CHECKING(TAGLIB_LIBS)
+            TAGLIB_LIBS=`$TAGLIB_CONFIG --libs`
+            AC_MSG_RESULT($TAGLIB_LIBS)
+        else
+            TAGLIB_CFLAGS=""
+            TAGLIB_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find taglib >= $1",)
+        fi
+
+        AC_SUBST(TAGLIB_CFLAGS)
+        AC_SUBST(TAGLIB_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (taglib) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
+dnl Macro to check for ICU of sufficient version by looking at icu-config
+dnl
+dnl usage:
+dnl AC_CHECK_ICU(version, action-if, action-not)
+dnl
+dnl defines ICU_LIBS, ICU_CFLAGS, ICU_CXXFLAGS, see icu-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_ICU], [
+  succeeded=no
+
+  if test -z "$ICU_CONFIG"; then
+    AC_PATH_PROG(ICU_CONFIG, icu-config, no)
+  fi
+
+  if test "$ICU_CONFIG" = "no" ; then
+    echo "*** The icu-config script could not be found. Make sure it is"
+    echo "*** in your path, and that taglib is properly installed."
+    echo "*** Or see http://ibm.com/software/globalization/icu/"
+  else
+    ICU_VERSION=`$ICU_CONFIG --version`
+    AC_MSG_CHECKING(for ICU >= $1)
+        VERSION_CHECK=`expr $ICU_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(ICU_CFLAGS)
+            ICU_CFLAGS=`$ICU_CONFIG --cflags`
+            AC_MSG_RESULT($ICU_CFLAGS)
+
+            AC_MSG_CHECKING(ICU_CXXFLAGS)
+            ICU_CXXFLAGS=`$ICU_CONFIG --cxxflags`
+            AC_MSG_RESULT($ICU_CXXFLAGS)
+
+            AC_MSG_CHECKING(ICU_LIBS)
+            ICU_LIBS=`$ICU_CONFIG --ldflags`
+            AC_MSG_RESULT($ICU_LIBS)
+        else
+            ICU_CFLAGS=""
+            ICU_CXXFLAGS=""
+            ICU_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find ICU >= $1",)
+        fi
+
+        AC_SUBST(ICU_CFLAGS)
+        AC_SUBST(ICU_CXXFLAGS)
+        AC_SUBST(ICU_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (ICU) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
 dnl Macro to check for C++ namespaces
 dnl for more information on this macro, see
 dnl http://autoconf-archive.cryp.to/ac_cxx_namespaces.html
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/modules/core/etc/configure.ac livesupport-x/modules/core/etc/configure.ac
--- livesupport/modules/core/etc/configure.ac	2005-09-20 12:46:39.000000000 +0200
+++ livesupport-x/modules/core/etc/configure.ac	2005-09-19 16:38:06.000000000 +0200
@@ -76,6 +76,19 @@
 AC_SUBST(LIBXMLPP_CFLAGS)
 AC_SUBST(LIBXMLPP_LIBS)
 
+AC_CHECK_TAGLIB(1.3.1)
+AC_SUBST(TAGLIB_CFLAGS)
+AC_SUBST(TAGLIB_LIBS)
+
+AC_CHECK_ICU(3.0)
+AC_SUBST(ICU_CFLAGS)
+AC_SUBST(ICU_CXXFLAGS)
+AC_SUBST(ICU_LIBS)
+
+AC_PATH_PROG(GENRB, genrb)
+AC_SUBST(GENRB)
+
+
 dnl-----------------------------------------------------------------------------
 dnl enable compilaton for code coverage data
 dnl-----------------------------------------------------------------------------
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/modules/core/etc/Makefile.in livesupport-x/modules/core/etc/Makefile.in
--- livesupport/modules/core/etc/Makefile.in	2005-09-20 12:46:39.000000000 +0200
+++ livesupport-x/modules/core/etc/Makefile.in	2005-09-19 16:38:37.000000000 +0200
@@ -59,7 +59,7 @@
 USR_LIB_DIR     = ${USR_DIR}/lib
 BOOST_INCLUDE_DIR    = ${USR_INCLUDE_DIR}/boost-1_33_1
 
-GENRB     = ${USR_BIN_DIR}/genrb
+GENRB     = @GENRB@
 GENRBOPTS = --destdir ${TMP_DIR} \
             --encoding utf-8 \
             --package-name ${PACKAGE_NAME} \
@@ -73,12 +73,12 @@
 LIBXMLPP_CFLAGS=@LIBXMLPP_CFLAGS@
 LIBXMLPP_LIBS=@LIBXMLPP_LIBS@
 
-# TODO: move ICU flag determination to configure script
-ICU_CFLAGS=
-ICU_LIBS=`${USR_DIR}/bin/icu-config --ldflags --ldflags-toolutil --ldflags-icuio`
+ICU_CFLAGS=@ICU_CFLAGS@
+ICU_CXXFLAGS=@ICU_CXXFLAGS@
+ICU_LIBS=@ICU_LIBS@
 
-TAGLIB_CFLAGS   =`${USR_DIR}/bin/taglib-config --cflags`
-TAGLIB_LIBS     =`${USR_DIR}/bin/taglib-config --libs`
+TAGLIB_CFLAGS=@TAGLIB_CFLAGS@
+TAGLIB_LIBS=@TAGLIB_LIBS@
 
 TEST_RESULTS = ${DOC_DIR}/testResults.xml
 # the text result XSLT has to be relative to the test result file, e.g. TMP_DIR
@@ -99,7 +99,6 @@
 CPPFLAGS = @CPPFLAGS@
 CXXFLAGS = @CXXFLAGS@ @DEFS@ @COVERAGE_CXXFLAGS@ -pthread \
                              -pedantic -Wall -Wno-long-long \
-                             ${ICU_CFLAGS} \
                              ${TAGLIB_CFLAGS} \
                              ${LIBXMLPP_CFLAGS} \
                              -I${USR_INCLUDE_DIR} \
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/modules/playlistExecutor/etc/acinclude.m4 livesupport-x/modules/playlistExecutor/etc/acinclude.m4
--- livesupport/modules/playlistExecutor/etc/acinclude.m4	2005-09-20 12:45:15.000000000 +0200
+++ livesupport-x/modules/playlistExecutor/etc/acinclude.m4	2005-09-19 17:25:54.000000000 +0200
@@ -91,6 +91,122 @@
 
 
 dnl-----------------------------------------------------------------------------
+dnl Macro to check for taglib of sufficient version by looking at taglib-config
+dnl
+dnl usage:
+dnl AC_CHECK_TAGLIB(version, action-if, action-not)
+dnl
+dnl defines TAGLIB_LIBS, TAGLIB_CFLAGS, see taglib-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_TAGLIB], [
+  succeeded=no
+
+  if test -z "$TAGLIB_CONFIG"; then
+    AC_PATH_PROG(TAGLIB_CONFIG, taglib-config, no)
+  fi
+
+  if test "$TAGLIB_CONFIG" = "no" ; then
+    echo "*** The taglib-config script could not be found. Make sure it is"
+    echo "*** in your path, and that taglib is properly installed."
+    echo "*** Or see http://developer.kde.org/~wheeler/taglib.html"
+  else
+    TAGLIB_VERSION=`$TAGLIB_CONFIG --version`
+    AC_MSG_CHECKING(for taglib >= $1)
+        VERSION_CHECK=`expr $TAGLIB_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(TAGLIB_CFLAGS)
+            TAGLIB_CFLAGS=`$TAGLIB_CONFIG --cflags`
+            AC_MSG_RESULT($TAGLIB_CFLAGS)
+
+            AC_MSG_CHECKING(TAGLIB_LIBS)
+            TAGLIB_LIBS=`$TAGLIB_CONFIG --libs`
+            AC_MSG_RESULT($TAGLIB_LIBS)
+        else
+            TAGLIB_CFLAGS=""
+            TAGLIB_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find taglib >= $1",)
+        fi
+
+        AC_SUBST(TAGLIB_CFLAGS)
+        AC_SUBST(TAGLIB_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (taglib) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
+dnl Macro to check for ICU of sufficient version by looking at icu-config
+dnl
+dnl usage:
+dnl AC_CHECK_ICU(version, action-if, action-not)
+dnl
+dnl defines ICU_LIBS, ICU_CFLAGS, ICU_CXXFLAGS, see icu-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_ICU], [
+  succeeded=no
+
+  if test -z "$ICU_CONFIG"; then
+    AC_PATH_PROG(ICU_CONFIG, icu-config, no)
+  fi
+
+  if test "$ICU_CONFIG" = "no" ; then
+    echo "*** The icu-config script could not be found. Make sure it is"
+    echo "*** in your path, and that taglib is properly installed."
+    echo "*** Or see http://ibm.com/software/globalization/icu/"
+  else
+    ICU_VERSION=`$ICU_CONFIG --version`
+    AC_MSG_CHECKING(for ICU >= $1)
+        VERSION_CHECK=`expr $ICU_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(ICU_CFLAGS)
+            ICU_CFLAGS=`$ICU_CONFIG --cflags`
+            AC_MSG_RESULT($ICU_CFLAGS)
+
+            AC_MSG_CHECKING(ICU_CXXFLAGS)
+            ICU_CXXFLAGS=`$ICU_CONFIG --cxxflags`
+            AC_MSG_RESULT($ICU_CXXFLAGS)
+
+            AC_MSG_CHECKING(ICU_LIBS)
+            ICU_LIBS=`$ICU_CONFIG --ldflags`
+            AC_MSG_RESULT($ICU_LIBS)
+        else
+            ICU_CFLAGS=""
+            ICU_CXXFLAGS=""
+            ICU_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find ICU >= $1",)
+        fi
+
+        AC_SUBST(ICU_CFLAGS)
+        AC_SUBST(ICU_CXXFLAGS)
+        AC_SUBST(ICU_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (ICU) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
 dnl Macro to check for C++ namespaces
 dnl for more information on this macro, see
 dnl http://autoconf-archive.cryp.to/ac_cxx_namespaces.html
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/modules/playlistExecutor/etc/configure.ac livesupport-x/modules/playlistExecutor/etc/configure.ac
--- livesupport/modules/playlistExecutor/etc/configure.ac	2005-09-20 12:45:15.000000000 +0200
+++ livesupport-x/modules/playlistExecutor/etc/configure.ac	2005-09-19 17:25:35.000000000 +0200
@@ -74,6 +74,18 @@
 AC_SUBST(GSTREAMER_CFLAGS)
 AC_SUBST(GSTREAMER_LIBS)
 
+AC_CHECK_TAGLIB(1.3.1)
+AC_SUBST(TAGLIB_CFLAGS)
+AC_SUBST(TAGLIB_LIBS)
+
+AC_CHECK_ICU(3.0)
+AC_SUBST(ICU_CFLAGS)
+AC_SUBST(ICU_CXXFLAGS)
+AC_SUBST(ICU_LIBS)
+
+AC_PATH_PROG(GENRB, genrb)
+AC_SUBST(GENRB)
+
 
 dnl-----------------------------------------------------------------------------
 dnl enable compilaton for code coverage data
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/modules/playlistExecutor/etc/Makefile.in livesupport-x/modules/playlistExecutor/etc/Makefile.in
--- livesupport/modules/playlistExecutor/etc/Makefile.in	2005-09-20 12:45:15.000000000 +0200
+++ livesupport-x/modules/playlistExecutor/etc/Makefile.in	2005-09-19 17:26:28.000000000 +0200
@@ -82,13 +82,15 @@
 LIBXMLPP_CFLAGS=@LIBXMLPP_CFLAGS@
 LIBXMLPP_LIBS=@LIBXMLPP_LIBS@
 
-# TODO: move ICU flag determination to configure script
-ICU_LIBS=`${USR_DIR}/bin/icu-config --ldflags --ldflags-toolutil --ldflags-icuio`
+ICU_CFLAGS=@ICU_CFLAGS@
+ICU_CXXFLAGS=@ICU_CXXFLAGS@
+ICU_LIBS=@ICU_LIBS@
 
 GSTREAMER_CFLAGS=@GSTREAMER_CFLAGS@
 GSTREAMER_LIBS=@GSTREAMER_LIBS@
 
-TAGLIB_LIBS     =`${USR_DIR}/bin/taglib-config --libs`
+TAGLIB_CFLAGS=@TAGLIB_CFLAGS@
+TAGLIB_LIBS=@TAGLIB_LIBS@
 
 TEST_RESULTS = ${DOC_DIR}/testResults.xml
 # the text result XSLT has to be relative to the test result file, e.g. TMP_DIR
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/modules/schedulerClient/etc/acinclude.m4 livesupport-x/modules/schedulerClient/etc/acinclude.m4
--- livesupport/modules/schedulerClient/etc/acinclude.m4	2005-09-20 12:46:55.000000000 +0200
+++ livesupport-x/modules/schedulerClient/etc/acinclude.m4	2005-09-19 17:29:40.000000000 +0200
@@ -91,6 +91,122 @@
 
 
 dnl-----------------------------------------------------------------------------
+dnl Macro to check for taglib of sufficient version by looking at taglib-config
+dnl
+dnl usage:
+dnl AC_CHECK_TAGLIB(version, action-if, action-not)
+dnl
+dnl defines TAGLIB_LIBS, TAGLIB_CFLAGS, see taglib-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_TAGLIB], [
+  succeeded=no
+
+  if test -z "$TAGLIB_CONFIG"; then
+    AC_PATH_PROG(TAGLIB_CONFIG, taglib-config, no)
+  fi
+
+  if test "$TAGLIB_CONFIG" = "no" ; then
+    echo "*** The taglib-config script could not be found. Make sure it is"
+    echo "*** in your path, and that taglib is properly installed."
+    echo "*** Or see http://developer.kde.org/~wheeler/taglib.html"
+  else
+    TAGLIB_VERSION=`$TAGLIB_CONFIG --version`
+    AC_MSG_CHECKING(for taglib >= $1)
+        VERSION_CHECK=`expr $TAGLIB_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(TAGLIB_CFLAGS)
+            TAGLIB_CFLAGS=`$TAGLIB_CONFIG --cflags`
+            AC_MSG_RESULT($TAGLIB_CFLAGS)
+
+            AC_MSG_CHECKING(TAGLIB_LIBS)
+            TAGLIB_LIBS=`$TAGLIB_CONFIG --libs`
+            AC_MSG_RESULT($TAGLIB_LIBS)
+        else
+            TAGLIB_CFLAGS=""
+            TAGLIB_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find taglib >= $1",)
+        fi
+
+        AC_SUBST(TAGLIB_CFLAGS)
+        AC_SUBST(TAGLIB_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (taglib) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
+dnl Macro to check for ICU of sufficient version by looking at icu-config
+dnl
+dnl usage:
+dnl AC_CHECK_ICU(version, action-if, action-not)
+dnl
+dnl defines ICU_LIBS, ICU_CFLAGS, ICU_CXXFLAGS, see icu-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_ICU], [
+  succeeded=no
+
+  if test -z "$ICU_CONFIG"; then
+    AC_PATH_PROG(ICU_CONFIG, icu-config, no)
+  fi
+
+  if test "$ICU_CONFIG" = "no" ; then
+    echo "*** The icu-config script could not be found. Make sure it is"
+    echo "*** in your path, and that taglib is properly installed."
+    echo "*** Or see http://ibm.com/software/globalization/icu/"
+  else
+    ICU_VERSION=`$ICU_CONFIG --version`
+    AC_MSG_CHECKING(for ICU >= $1)
+        VERSION_CHECK=`expr $ICU_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(ICU_CFLAGS)
+            ICU_CFLAGS=`$ICU_CONFIG --cflags`
+            AC_MSG_RESULT($ICU_CFLAGS)
+
+            AC_MSG_CHECKING(ICU_CXXFLAGS)
+            ICU_CXXFLAGS=`$ICU_CONFIG --cxxflags`
+            AC_MSG_RESULT($ICU_CXXFLAGS)
+
+            AC_MSG_CHECKING(ICU_LIBS)
+            ICU_LIBS=`$ICU_CONFIG --ldflags`
+            AC_MSG_RESULT($ICU_LIBS)
+        else
+            ICU_CFLAGS=""
+            ICU_CXXFLAGS=""
+            ICU_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find ICU >= $1",)
+        fi
+
+        AC_SUBST(ICU_CFLAGS)
+        AC_SUBST(ICU_CXXFLAGS)
+        AC_SUBST(ICU_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (ICU) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
 dnl Macro to check for C++ namespaces
 dnl for more information on this macro, see
 dnl http://autoconf-archive.cryp.to/ac_cxx_namespaces.html
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/modules/schedulerClient/etc/configure.ac livesupport-x/modules/schedulerClient/etc/configure.ac
--- livesupport/modules/schedulerClient/etc/configure.ac	2005-09-20 12:46:55.000000000 +0200
+++ livesupport-x/modules/schedulerClient/etc/configure.ac	2005-09-19 17:29:24.000000000 +0200
@@ -70,6 +70,18 @@
 AC_SUBST(LIBXMLPP_CFLAGS)
 AC_SUBST(LIBXMLPP_LIBS)
 
+AC_CHECK_TAGLIB(1.3.1)
+AC_SUBST(TAGLIB_CFLAGS)
+AC_SUBST(TAGLIB_LIBS)
+
+AC_CHECK_ICU(3.0)
+AC_SUBST(ICU_CFLAGS)
+AC_SUBST(ICU_CXXFLAGS)
+AC_SUBST(ICU_LIBS)
+
+AC_PATH_PROG(GENRB, genrb)
+AC_SUBST(GENRB)
+
 
 dnl-----------------------------------------------------------------------------
 dnl enable compilaton for code coverage data
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/modules/schedulerClient/etc/Makefile.in livesupport-x/modules/schedulerClient/etc/Makefile.in
--- livesupport/modules/schedulerClient/etc/Makefile.in	2005-09-20 12:46:55.000000000 +0200
+++ livesupport-x/modules/schedulerClient/etc/Makefile.in	2005-09-19 17:29:57.000000000 +0200
@@ -83,10 +83,12 @@
 LIBXMLPP_CFLAGS=@LIBXMLPP_CFLAGS@
 LIBXMLPP_LIBS=@LIBXMLPP_LIBS@
 
-# TODO: move ICU flag determination to configure script
-ICU_LIBS=`${USR_DIR}/bin/icu-config --ldflags --ldflags-toolutil --ldflags-icuio`
+ICU_CFLAGS=@ICU_CFLAGS@
+ICU_CXXFLAGS=@ICU_CXXFLAGS@
+ICU_LIBS=@ICU_LIBS@
 
-TAGLIB_LIBS     =`${USR_DIR}/bin/taglib-config --libs`
+TAGLIB_CFLAGS=@TAGLIB_CFLAGS@
+TAGLIB_LIBS=@TAGLIB_LIBS@
 
 TEST_RESULTS = ${DOC_DIR}/testResults.xml
 # the text result XSLT has to be relative to the test result file, e.g. TMP_DIR
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/modules/storage/etc/acinclude.m4 livesupport-x/modules/storage/etc/acinclude.m4
--- livesupport/modules/storage/etc/acinclude.m4	2005-09-20 12:45:42.000000000 +0200
+++ livesupport-x/modules/storage/etc/acinclude.m4	2005-09-20 12:13:02.000000000 +0200
@@ -90,3 +90,175 @@
 
 
 
+dnl-----------------------------------------------------------------------------
+dnl Macro to check for taglib of sufficient version by looking at taglib-config
+dnl
+dnl usage:
+dnl AC_CHECK_TAGLIB(version, action-if, action-not)
+dnl
+dnl defines TAGLIB_LIBS, TAGLIB_CFLAGS, see taglib-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_TAGLIB], [
+  succeeded=no
+
+  if test -z "$TAGLIB_CONFIG"; then
+    AC_PATH_PROG(TAGLIB_CONFIG, taglib-config, no)
+  fi
+
+  if test "$TAGLIB_CONFIG" = "no" ; then
+    echo "*** The taglib-config script could not be found. Make sure it is"
+    echo "*** in your path, and that taglib is properly installed."
+    echo "*** Or see http://developer.kde.org/~wheeler/taglib.html"
+  else
+    TAGLIB_VERSION=`$TAGLIB_CONFIG --version`
+    AC_MSG_CHECKING(for taglib >= $1)
+        VERSION_CHECK=`expr $TAGLIB_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(TAGLIB_CFLAGS)
+            TAGLIB_CFLAGS=`$TAGLIB_CONFIG --cflags`
+            AC_MSG_RESULT($TAGLIB_CFLAGS)
+
+            AC_MSG_CHECKING(TAGLIB_LIBS)
+            TAGLIB_LIBS=`$TAGLIB_CONFIG --libs`
+            AC_MSG_RESULT($TAGLIB_LIBS)
+        else
+            TAGLIB_CFLAGS=""
+            TAGLIB_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find taglib >= $1",)
+        fi
+
+        AC_SUBST(TAGLIB_CFLAGS)
+        AC_SUBST(TAGLIB_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (taglib) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
+dnl Macro to check for ICU of sufficient version by looking at icu-config
+dnl
+dnl usage:
+dnl AC_CHECK_ICU(version, action-if, action-not)
+dnl
+dnl defines ICU_LIBS, ICU_CFLAGS, ICU_CXXFLAGS, see icu-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_ICU], [
+  succeeded=no
+
+  if test -z "$ICU_CONFIG"; then
+    AC_PATH_PROG(ICU_CONFIG, icu-config, no)
+  fi
+
+  if test "$ICU_CONFIG" = "no" ; then
+    echo "*** The icu-config script could not be found. Make sure it is"
+    echo "*** in your path, and that taglib is properly installed."
+    echo "*** Or see http://ibm.com/software/globalization/icu/"
+  else
+    ICU_VERSION=`$ICU_CONFIG --version`
+    AC_MSG_CHECKING(for ICU >= $1)
+        VERSION_CHECK=`expr $ICU_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(ICU_CFLAGS)
+            ICU_CFLAGS=`$ICU_CONFIG --cflags`
+            AC_MSG_RESULT($ICU_CFLAGS)
+
+            AC_MSG_CHECKING(ICU_CXXFLAGS)
+            ICU_CXXFLAGS=`$ICU_CONFIG --cxxflags`
+            AC_MSG_RESULT($ICU_CXXFLAGS)
+
+            AC_MSG_CHECKING(ICU_LIBS)
+            ICU_LIBS=`$ICU_CONFIG --ldflags`
+            AC_MSG_RESULT($ICU_LIBS)
+        else
+            ICU_CFLAGS=""
+            ICU_CXXFLAGS=""
+            ICU_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find ICU >= $1",)
+        fi
+
+        AC_SUBST(ICU_CFLAGS)
+        AC_SUBST(ICU_CXXFLAGS)
+        AC_SUBST(ICU_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (ICU) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
+dnl Macro to check for curl of sufficient version by looking at curl-config
+dnl
+dnl usage:
+dnl AC_CHECK_CURL(version, action-if, action-not)
+dnl
+dnl defines CURL_LIBS, CURL_CFLAGS, see curl-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_CURL], [
+  succeeded=no
+
+  if test -z "$CURL_CONFIG"; then
+    AC_PATH_PROG(CURL_CONFIG, curl-config, no)
+  fi
+
+  if test "$CURL_CONFIG" = "no" ; then
+    echo "*** The curl-config script could not be found. Make sure it is"
+    echo "*** in your path, and that curl is properly installed."
+    echo "*** Or see http://curl.haxx.se/"
+  else
+    dnl curl-config --version returns "libcurl <version>", thus cut the number
+    CURL_VERSION=`$CURL_CONFIG --version | cut -d" " -f2`
+    AC_MSG_CHECKING(for curl >= $1)
+        VERSION_CHECK=`expr $CURL_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(CURL_CFLAGS)
+            CURL_CFLAGS=`$CURL_CONFIG --cflags`
+            AC_MSG_RESULT($CURL_CFLAGS)
+
+            AC_MSG_CHECKING(CURL_LIBS)
+            CURL_LIBS=`$CURL_CONFIG --libs`
+            AC_MSG_RESULT($CURL_LIBS)
+        else
+            CURL_CFLAGS=""
+            CURL_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find curl >= $1",)
+        fi
+
+        AC_SUBST(CURL_CFLAGS)
+        AC_SUBST(CURL_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (curl) not met.]), [$3])
+  fi
+])
+
+
+
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/modules/storage/etc/configure.ac livesupport-x/modules/storage/etc/configure.ac
--- livesupport/modules/storage/etc/configure.ac	2005-09-20 12:45:42.000000000 +0200
+++ livesupport-x/modules/storage/etc/configure.ac	2005-09-20 12:12:42.000000000 +0200
@@ -62,6 +62,22 @@
 AC_SUBST(LIBXMLPP_CFLAGS)
 AC_SUBST(LIBXMLPP_LIBS)
 
+AC_CHECK_CURL(7.13.0)
+AC_SUBST(CURL_CFLAGS)
+AC_SUBST(CURL_LIBS)
+
+AC_CHECK_TAGLIB(1.3.1)
+AC_SUBST(TAGLIB_CFLAGS)
+AC_SUBST(TAGLIB_LIBS)
+
+AC_CHECK_ICU(3.0)
+AC_SUBST(ICU_CFLAGS)
+AC_SUBST(ICU_CXXFLAGS)
+AC_SUBST(ICU_LIBS)
+
+AC_PATH_PROG(GENRB, genrb)
+AC_SUBST(GENRB)
+
 
 dnl-----------------------------------------------------------------------------
 dnl enable compilaton for code coverage data
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/modules/storage/etc/Makefile.in livesupport-x/modules/storage/etc/Makefile.in
--- livesupport/modules/storage/etc/Makefile.in	2005-09-20 12:45:42.000000000 +0200
+++ livesupport-x/modules/storage/etc/Makefile.in	2005-09-20 12:13:25.000000000 +0200
@@ -74,12 +74,15 @@
 LIBXMLPP_CFLAGS=@LIBXMLPP_CFLAGS@
 LIBXMLPP_LIBS=@LIBXMLPP_LIBS@
 
-# TODO: move ICU flag determination to configure script
-ICU_LIBS=`${USR_DIR}/bin/icu-config --ldflags --ldflags-toolutil --ldflags-icuio`
+CURL_CFLAGS=@CURL_CFLAGS@
+CURL_LIBS=@CURL_LIBS@
 
-CURL_LIBS=`${USR_DIR}/bin/curl-config --libs`
+ICU_CFLAGS=@ICU_CFLAGS@
+ICU_CXXFLAGS=@ICU_CXXFLAGS@
+ICU_LIBS=@ICU_LIBS@
 
-TAGLIB_LIBS     =`${USR_DIR}/bin/taglib-config --libs`
+TAGLIB_CFLAGS=@TAGLIB_CFLAGS@
+TAGLIB_LIBS=@TAGLIB_LIBS@
 
 TEST_RESULTS = ${DOC_DIR}/testResults.xml
 # the text result XSLT has to be relative to the test result file, e.g. TMP_DIR
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/products/gLiveSupport/etc/acinclude.m4 livesupport-x/products/gLiveSupport/etc/acinclude.m4
--- livesupport/products/gLiveSupport/etc/acinclude.m4	2005-09-20 12:43:07.000000000 +0200
+++ livesupport-x/products/gLiveSupport/etc/acinclude.m4	2005-09-20 11:56:35.000000000 +0200
@@ -91,6 +91,178 @@
 
 
 dnl-----------------------------------------------------------------------------
+dnl Macro to check for taglib of sufficient version by looking at taglib-config
+dnl
+dnl usage:
+dnl AC_CHECK_TAGLIB(version, action-if, action-not)
+dnl
+dnl defines TAGLIB_LIBS, TAGLIB_CFLAGS, see taglib-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_TAGLIB], [
+  succeeded=no
+
+  if test -z "$TAGLIB_CONFIG"; then
+    AC_PATH_PROG(TAGLIB_CONFIG, taglib-config, no)
+  fi
+
+  if test "$TAGLIB_CONFIG" = "no" ; then
+    echo "*** The taglib-config script could not be found. Make sure it is"
+    echo "*** in your path, and that taglib is properly installed."
+    echo "*** Or see http://developer.kde.org/~wheeler/taglib.html"
+  else
+    TAGLIB_VERSION=`$TAGLIB_CONFIG --version`
+    AC_MSG_CHECKING(for taglib >= $1)
+        VERSION_CHECK=`expr $TAGLIB_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(TAGLIB_CFLAGS)
+            TAGLIB_CFLAGS=`$TAGLIB_CONFIG --cflags`
+            AC_MSG_RESULT($TAGLIB_CFLAGS)
+
+            AC_MSG_CHECKING(TAGLIB_LIBS)
+            TAGLIB_LIBS=`$TAGLIB_CONFIG --libs`
+            AC_MSG_RESULT($TAGLIB_LIBS)
+        else
+            TAGLIB_CFLAGS=""
+            TAGLIB_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find taglib >= $1",)
+        fi
+
+        AC_SUBST(TAGLIB_CFLAGS)
+        AC_SUBST(TAGLIB_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (taglib) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
+dnl Macro to check for ICU of sufficient version by looking at icu-config
+dnl
+dnl usage:
+dnl AC_CHECK_ICU(version, action-if, action-not)
+dnl
+dnl defines ICU_LIBS, ICU_CFLAGS, ICU_CXXFLAGS, see icu-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_ICU], [
+  succeeded=no
+
+  if test -z "$ICU_CONFIG"; then
+    AC_PATH_PROG(ICU_CONFIG, icu-config, no)
+  fi
+
+  if test "$ICU_CONFIG" = "no" ; then
+    echo "*** The icu-config script could not be found. Make sure it is"
+    echo "*** in your path, and that taglib is properly installed."
+    echo "*** Or see http://ibm.com/software/globalization/icu/"
+  else
+    ICU_VERSION=`$ICU_CONFIG --version`
+    AC_MSG_CHECKING(for ICU >= $1)
+        VERSION_CHECK=`expr $ICU_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(ICU_CFLAGS)
+            ICU_CFLAGS=`$ICU_CONFIG --cflags`
+            AC_MSG_RESULT($ICU_CFLAGS)
+
+            AC_MSG_CHECKING(ICU_CXXFLAGS)
+            ICU_CXXFLAGS=`$ICU_CONFIG --cxxflags`
+            AC_MSG_RESULT($ICU_CXXFLAGS)
+
+            AC_MSG_CHECKING(ICU_LIBS)
+            ICU_LIBS=`$ICU_CONFIG --ldflags`
+            AC_MSG_RESULT($ICU_LIBS)
+        else
+            ICU_CFLAGS=""
+            ICU_CXXFLAGS=""
+            ICU_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find ICU >= $1",)
+        fi
+
+        AC_SUBST(ICU_CFLAGS)
+        AC_SUBST(ICU_CXXFLAGS)
+        AC_SUBST(ICU_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (ICU) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
+dnl Macro to check for curl of sufficient version by looking at curl-config
+dnl
+dnl usage:
+dnl AC_CHECK_CURL(version, action-if, action-not)
+dnl
+dnl defines CURL_LIBS, CURL_CFLAGS, see curl-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_CURL], [
+  succeeded=no
+
+  if test -z "$CURL_CONFIG"; then
+    AC_PATH_PROG(CURL_CONFIG, curl-config, no)
+  fi
+
+  if test "$CURL_CONFIG" = "no" ; then
+    echo "*** The curl-config script could not be found. Make sure it is"
+    echo "*** in your path, and that curl is properly installed."
+    echo "*** Or see http://curl.haxx.se/"
+  else
+    dnl curl-config --version returns "libcurl <version>", thus cut the number
+    CURL_VERSION=`$CURL_CONFIG --version | cut -d" " -f2`
+    AC_MSG_CHECKING(for curl >= $1)
+        VERSION_CHECK=`expr $CURL_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(CURL_CFLAGS)
+            CURL_CFLAGS=`$CURL_CONFIG --cflags`
+            AC_MSG_RESULT($CURL_CFLAGS)
+
+            AC_MSG_CHECKING(CURL_LIBS)
+            CURL_LIBS=`$CURL_CONFIG --libs`
+            AC_MSG_RESULT($CURL_LIBS)
+        else
+            CURL_CFLAGS=""
+            CURL_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find curl >= $1",)
+        fi
+
+        AC_SUBST(CURL_CFLAGS)
+        AC_SUBST(CURL_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (curl) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
 dnl Macro to check for C++ namespaces
 dnl for more information on this macro, see
 dnl http://autoconf-archive.cryp.to/ac_cxx_namespaces.html
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/products/gLiveSupport/etc/configure.ac livesupport-x/products/gLiveSupport/etc/configure.ac
--- livesupport/products/gLiveSupport/etc/configure.ac	2005-09-20 12:43:07.000000000 +0200
+++ livesupport-x/products/gLiveSupport/etc/configure.ac	2005-09-20 11:56:15.000000000 +0200
@@ -78,6 +78,22 @@
 AC_SUBST(GSTREAMER_CFLAGS)
 AC_SUBST(GSTREAMER_LIBS)
 
+AC_CHECK_CURL(7.13.0)
+AC_SUBST(CURL_CFLAGS)
+AC_SUBST(CURL_LIBS)
+
+AC_CHECK_TAGLIB(1.3.1)
+AC_SUBST(TAGLIB_CFLAGS)
+AC_SUBST(TAGLIB_LIBS)
+
+AC_CHECK_ICU(3.0)
+AC_SUBST(ICU_CFLAGS)
+AC_SUBST(ICU_CXXFLAGS)
+AC_SUBST(ICU_LIBS)
+
+AC_PATH_PROG(GENRB, genrb)
+AC_SUBST(GENRB)
+
 
 dnl-----------------------------------------------------------------------------
 dnl enable compilaton for code coverage data
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/products/gLiveSupport/etc/Makefile.in livesupport-x/products/gLiveSupport/etc/Makefile.in
--- livesupport/products/gLiveSupport/etc/Makefile.in	2005-09-20 12:43:07.000000000 +0200
+++ livesupport-x/products/gLiveSupport/etc/Makefile.in	2005-09-20 11:56:49.000000000 +0200
@@ -103,7 +103,7 @@
               s/ls_scheduler_xmlRpcPrefix/${SCHEDULER_XML_RPC_PREFIX}/;"
 
 
-GENRB     = ${USR_BIN_DIR}/genrb
+GENRB     = @GENRB@
 GENRBOPTS = --destdir ${TMP_DIR} \
             --encoding utf-8 \
             --package-name ${PACKAGE_NAME} \
@@ -168,7 +168,8 @@
 LIBXMLPP_CFLAGS=@LIBXMLPP_CFLAGS@
 LIBXMLPP_LIBS=@LIBXMLPP_LIBS@
 
-CURL_LIBS=`${USR_DIR}/bin/curl-config --libs`
+CURL_CFLAGS=@CURL_CFLAGS@
+CURL_LIBS=@CURL_LIBS@
 
 GTKMM_CFLAGS=@GTKMM_CFLAGS@
 GTKMM_LIBS=@GTKMM_LIBS@
@@ -176,11 +177,12 @@
 GSTREAMER_CFLAGS=@GSTREAMER_CFLAGS@
 GSTREAMER_LIBS=@GSTREAMER_LIBS@
 
-ICU_CFLAGS=
-ICU_LIBS=`${USR_DIR}/bin/icu-config --ldflags-toolutil --ldflags-icuio`
+ICU_CFLAGS=@ICU_CFLAGS@
+ICU_CXXFLAGS=@ICU_CXXFLAGS@
+ICU_LIBS=@ICU_LIBS@
 
-TAGLIB_CFLAGS=`${USR_DIR}/bin/taglib-config --cflags`
-TAGLIB_LIBS=`${USR_DIR}/bin/taglib-config --libs`
+TAGLIB_CFLAGS=@TAGLIB_CFLAGS@
+TAGLIB_LIBS=@TAGLIB_LIBS@
 
 TEST_RESULTS = ${DOC_DIR}/testResults.xml
 # the text result XSLT has to be relative to the test result file, e.g. TMP_DIR
@@ -203,7 +205,6 @@
 CPPFLAGS = @CPPFLAGS@
 CXXFLAGS = @CXXFLAGS@ @DEFS@ @COVERAGE_CXXFLAGS@ -pthread \
                              -pedantic -Wall -Wno-long-long \
-                             ${ICU_CFLAGS} \
                              ${TAGLIB_CFLAGS} \
                              ${LIBXMLPP_CFLAGS} \
                              ${GTKMM_CFLAGS} \
 
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/products/scheduler/etc/acinclude.m4 livesupport-x/products/scheduler/etc/acinclude.m4
--- livesupport/products/scheduler/etc/acinclude.m4	2005-09-20 12:43:27.000000000 +0200
+++ livesupport-x/products/scheduler/etc/acinclude.m4	2005-09-19 17:45:40.000000000 +0200
@@ -91,6 +91,178 @@
 
 
 dnl-----------------------------------------------------------------------------
+dnl Macro to check for taglib of sufficient version by looking at taglib-config
+dnl
+dnl usage:
+dnl AC_CHECK_TAGLIB(version, action-if, action-not)
+dnl
+dnl defines TAGLIB_LIBS, TAGLIB_CFLAGS, see taglib-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_TAGLIB], [
+  succeeded=no
+
+  if test -z "$TAGLIB_CONFIG"; then
+    AC_PATH_PROG(TAGLIB_CONFIG, taglib-config, no)
+  fi
+
+  if test "$TAGLIB_CONFIG" = "no" ; then
+    echo "*** The taglib-config script could not be found. Make sure it is"
+    echo "*** in your path, and that taglib is properly installed."
+    echo "*** Or see http://developer.kde.org/~wheeler/taglib.html"
+  else
+    TAGLIB_VERSION=`$TAGLIB_CONFIG --version`
+    AC_MSG_CHECKING(for taglib >= $1)
+        VERSION_CHECK=`expr $TAGLIB_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(TAGLIB_CFLAGS)
+            TAGLIB_CFLAGS=`$TAGLIB_CONFIG --cflags`
+            AC_MSG_RESULT($TAGLIB_CFLAGS)
+
+            AC_MSG_CHECKING(TAGLIB_LIBS)
+            TAGLIB_LIBS=`$TAGLIB_CONFIG --libs`
+            AC_MSG_RESULT($TAGLIB_LIBS)
+        else
+            TAGLIB_CFLAGS=""
+            TAGLIB_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find taglib >= $1",)
+        fi
+
+        AC_SUBST(TAGLIB_CFLAGS)
+        AC_SUBST(TAGLIB_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (taglib) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
+dnl Macro to check for ICU of sufficient version by looking at icu-config
+dnl
+dnl usage:
+dnl AC_CHECK_ICU(version, action-if, action-not)
+dnl
+dnl defines ICU_LIBS, ICU_CFLAGS, ICU_CXXFLAGS, see icu-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_ICU], [
+  succeeded=no
+
+  if test -z "$ICU_CONFIG"; then
+    AC_PATH_PROG(ICU_CONFIG, icu-config, no)
+  fi
+
+  if test "$ICU_CONFIG" = "no" ; then
+    echo "*** The icu-config script could not be found. Make sure it is"
+    echo "*** in your path, and that taglib is properly installed."
+    echo "*** Or see http://ibm.com/software/globalization/icu/"
+  else
+    ICU_VERSION=`$ICU_CONFIG --version`
+    AC_MSG_CHECKING(for ICU >= $1)
+        VERSION_CHECK=`expr $ICU_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(ICU_CFLAGS)
+            ICU_CFLAGS=`$ICU_CONFIG --cflags`
+            AC_MSG_RESULT($ICU_CFLAGS)
+
+            AC_MSG_CHECKING(ICU_CXXFLAGS)
+            ICU_CXXFLAGS=`$ICU_CONFIG --cxxflags`
+            AC_MSG_RESULT($ICU_CXXFLAGS)
+
+            AC_MSG_CHECKING(ICU_LIBS)
+            ICU_LIBS=`$ICU_CONFIG --ldflags`
+            AC_MSG_RESULT($ICU_LIBS)
+        else
+            ICU_CFLAGS=""
+            ICU_CXXFLAGS=""
+            ICU_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find ICU >= $1",)
+        fi
+
+        AC_SUBST(ICU_CFLAGS)
+        AC_SUBST(ICU_CXXFLAGS)
+        AC_SUBST(ICU_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (ICU) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
+dnl Macro to check for curl of sufficient version by looking at curl-config
+dnl
+dnl usage:
+dnl AC_CHECK_CURL(version, action-if, action-not)
+dnl
+dnl defines CURL_LIBS, CURL_CFLAGS, see curl-config man page
+dnl-----------------------------------------------------------------------------
+AC_DEFUN([AC_CHECK_CURL], [
+  succeeded=no
+
+  if test -z "$CURL_CONFIG"; then
+    AC_PATH_PROG(CURL_CONFIG, curl-config, no)
+  fi
+
+  if test "$CURL_CONFIG" = "no" ; then
+    echo "*** The curl-config script could not be found. Make sure it is"
+    echo "*** in your path, and that curl is properly installed."
+    echo "*** Or see http://curl.haxx.se/"
+  else
+    dnl curl-config --version returns "libcurl <version>", thus cut the number
+    CURL_VERSION=`$CURL_CONFIG --version | cut -d" " -f2`
+    AC_MSG_CHECKING(for curl >= $1)
+        VERSION_CHECK=`expr $CURL_VERSION \>\= $1`
+        if test "$VERSION_CHECK" = "1" ; then
+            AC_MSG_RESULT(yes)
+            succeeded=yes
+
+            AC_MSG_CHECKING(CURL_CFLAGS)
+            CURL_CFLAGS=`$CURL_CONFIG --cflags`
+            AC_MSG_RESULT($CURL_CFLAGS)
+
+            AC_MSG_CHECKING(CURL_LIBS)
+            CURL_LIBS=`$CURL_CONFIG --libs`
+            AC_MSG_RESULT($CURL_LIBS)
+        else
+            CURL_CFLAGS=""
+            CURL_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but 
+            ## do set a variable so people can do so.
+            ifelse([$3], ,echo "can't find curl >= $1",)
+        fi
+
+        AC_SUBST(CURL_CFLAGS)
+        AC_SUBST(CURL_LIBS)
+  fi
+
+  if test $succeeded = yes; then
+     ifelse([$2], , :, [$2])
+  else
+     ifelse([$3], , AC_MSG_ERROR([Library requirements (curl) not met.]), [$3])
+  fi
+])
+
+
+
+dnl-----------------------------------------------------------------------------
 dnl Macro to check for C++ namespaces
 dnl for more information on this macro, see
 dnl http://autoconf-archive.cryp.to/ac_cxx_namespaces.html
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/products/scheduler/etc/configure.ac livesupport-x/products/scheduler/etc/configure.ac
--- livesupport/products/scheduler/etc/configure.ac	2005-09-20 12:43:27.000000000 +0200
+++ livesupport-x/products/scheduler/etc/configure.ac	2005-09-19 17:37:57.000000000 +0200
@@ -77,6 +77,22 @@
 AC_SUBST(GSTREAMER_CFLAGS)
 AC_SUBST(GSTREAMER_LIBS)
 
+AC_CHECK_CURL(7.13.0)
+AC_SUBST(CURL_CFLAGS)
+AC_SUBST(CURL_LIBS)
+
+AC_CHECK_TAGLIB(1.3.1)
+AC_SUBST(TAGLIB_CFLAGS)
+AC_SUBST(TAGLIB_LIBS)
+
+AC_CHECK_ICU(3.0)
+AC_SUBST(ICU_CFLAGS)
+AC_SUBST(ICU_CXXFLAGS)
+AC_SUBST(ICU_LIBS)
+
+AC_PATH_PROG(GENRB, genrb)
+AC_SUBST(GENRB)
+
 
 dnl-----------------------------------------------------------------------------
 dnl enable compilaton for code coverage data
diff -Naur --exclude=.svn --exclude=tmp --exclude=lib --exclude=Makefile --exclude=var --exclude=doc --exclude=src livesupport/products/scheduler/etc/Makefile.in livesupport-x/products/scheduler/etc/Makefile.in
--- livesupport/products/scheduler/etc/Makefile.in	2005-09-20 12:43:27.000000000 +0200
+++ livesupport-x/products/scheduler/etc/Makefile.in	2005-09-19 17:37:01.000000000 +0200
@@ -113,13 +113,15 @@
 GSTREAMER_LIBS=@GSTREAMER_LIBS@
 
 
-CURL_LIBS=`${USR_DIR}/bin/curl-config --libs`
+CURL_CFLAGS=@CURL_CFLAGS@
+CURL_LIBS=@CURL_LIBS@
 
-# TODO: move ICU flag determination to configure script
-ICU_LIBS=`${USR_DIR}/bin/icu-config --ldflags --ldflags-toolutil --ldflags-icuio`
+ICU_CFLAGS=@ICU_CFLAGS@
+ICU_CXXFLAGS=@ICU_CXXFLAGS@
+ICU_LIBS=@ICU_LIBS@
 
-TAGLIB_CFLAGS   =`${USR_DIR}/bin/taglib-config --cflags`
-TAGLIB_LIBS     =`${USR_DIR}/bin/taglib-config --libs`
+TAGLIB_CFLAGS=@TAGLIB_CFLAGS@
+TAGLIB_LIBS=@TAGLIB_LIBS@
 
 MODULES_DIR = ${BASE_DIR}/../../modules
 
