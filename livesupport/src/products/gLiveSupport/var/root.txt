root:table
{
    notLoggedInMsg:string           { "Not logged in" }
    loggedInMsg:string              { "Logged in as {0}" }
    loginButtonLabel:string         { "log in" }
    logoutButtonLabel:string        { "log out" }
    liveModeButtonLabel:string      { "live mode" }
    uploadFileButtonLabel:string    { "upload file" }
    scratchpadButtonLabel:string    { "scratchpad" }
    simplePlaylistMgmtButtonLabel:string
                                    { "edit playlist" }
    schedulerButtonLabel:string     { "scheduler" }
    searchButtonLabel:string        { "search" }
    optionsButtonLabel:string       { "options" }

    cancelButtonLabel:string        { "Cancel" }
    noButtonLabel:string            { "No" }
    yesButtonLabel:string           { "Yes" }
    okButtonLabel:string            { "OK" }

    elapsedTimeLabel:string         { "elapsed" }
    remainingTimeLabel:string       { "remaining" }
    
    localeNotAvailableMsg:string    { "Locale {0} not available" }
    schedulerNotReachableMsg:string { "Scheduler server not available" }
    storageNotReachableMsg:string   { "Storage server not available" }
    authenticationNotReachableMsg:string
                                    { "Authentication server not available" }
    audioErrorMsg                   { "Audio player error: " }
    sureToExitMsg:string            { "Are you sure you want to exit?" }

    masterPanelWindow:table
    {
        windowTitle:string          { "Master Panel" }
    }
        
    loginWindow:table
    {
        windowTitle:string          { "Login" }

        loginLabel:string           { "User name:" }
        passwordLabel:string        { "Password:" }
        okButtonLabel:string        { "OK" }
        cancelButtonLabel:string    { "Cancel" }
    }

    audioClipListWindow:table
    {
        windowTitle:string          { "Audio Clip List" }

        idColumnLabel:string        { "id" }
        lengthColumnLabel:string    { "length" }
        uriColumnLabel:string       { "URI" }
        tokenColumnLabel:string     { "token" }

        closeButtonLabel:string     { "close" }
    }

    scratchpadWindow:table
    {
        windowTitle:string          { "Scratchpad" }

        typeColumnLabel:string      { "Type" }
        titleColumnLabel:string     { "Title" }
        addToPlaylistButtonLabel:string
                                    { "Add to playlist" }
        clearListButtonLabel:string { "Clear list" }
        removeButtonLabel:string    { "Remove item(s)" }

        upMenuItem:string               { "Move _Up" }
        downMenuItem:string             { "Move D_own" }
        removeMenuItem:string           { "_Remove" }
        editPlaylistMenuItem:string     { "_Edit" }
        addToPlaylistMenuItem:string    { "_Add To Playlist" }
        schedulePlaylistMenuItem:string { "_Schedule" }
        cueMenuItem:string              { "Pre_view" }
        addToLiveModeMenuItem:string    { "Add To _Live Mode" }
        exportPlaylistMenuItem:string   { "E_xport Playlist" }
        uploadToHubMenuItem:string      { "Upload to the network hub" }
        
        cannotEditPlaylistMsg:string
                                    { "Could not open playlist for editing." }
    }

    playlistListWindow:table
    {
        windowTitle:string          { "Playlist" }

        listBoxLabel                { "Playlists" }
        detailBoxLabel              { "Playlist details" }

        idColumnLabel:string        { "id" }
        lengthColumnLabel:string    { "length" }
        uriColumnLabel:string       { "URI" }
        tokenColumnLabel:string     { "token" }

        closeButtonLabel:string     { "close" }
    }

    uploadFileWindow:table
    {
        windowTitle:string          { "Upload File" }

        chooseFileLabel:string      { "Filename" }
        chooseFileButtonLabel:string
                                    { "Browse" }

        mainSectionLabel:string     { "Main" }
        musicSectionLabel:string    { "Music" }
        voiceSectionLabel:string    { "Voice" }
        
        lengthLabel:string          { "Duration" }

        uploadButtonLabel:string    { "Upload" }
        closeButtonLabel:string     { "Cancel" }

        fileChooserDialogTitle:string
                                    { "Open File" }
        clipUploadedMsg:string      { "Uploaded clip ''{0}''." }
        couldNotOpenFileMsg:string  { "The file could not be opened." }
        couldNotReadLengthMsg:string 
                                    { "Could not determine audio clip length." }
        unsupportedFileTypeMsg:string
                                    { "Unsupported file type." }
        missingTitleMsg:string      { "Please enter a title." }
    }

    simplePlaylistManagementWindow:table
    {
        windowTitle:string          { "Simple Playlist Management" }

        startColumnLabel:string     { "Start" }
        titleColumnLabel:string     { "Title" }
        lengthColumnLabel:string    { "Length" }
        fadeInColumnLabel:string    { "Fade in" }
        fadeOutColumnLabel:string   { "Fade out" }
        nameLabel:string            { "Name" }
        saveButtonLabel:string      { "Save" }
        closeButtonLabel:string     { "Close" }
        lockFadesCheckButtonLabel:string    
                                    { "Lock fade-out to following fade-in" }
        statusBar:string            { "status bar" }
        
        upMenuItem:string           { "Move _Up" }
        downMenuItem:string         { "Move D_own" }
        removeMenuItem:string       { "_Remove" }

        playlistSavedMsg:string     { "Saved playlist ''{0}''." }
        savePlaylistDialogMsg:string
                                    { "Do you want to save the playlist?" }
        emptyTitleErrorMsg:string   { "Please enter a title." }
    }

    schedulerWindow:table
    {
        windowTitle:string          { "Scheduler" }
        
        scheduleTab:string          { "Schedule" }
        statusTab:string            { "Status" }

        startColumnLabel:string     { "start" }
        titleColumnLabel:string     { "title" }
        endColumnLabel:string       { "end" }
        deleteMenuItem:string       { "_Delete" }
        
        statusText:string           { "The scheduler is" }
        runningStatus:string        { "running." }
        stoppedStatus:string        { "stopped." }
        
        startButtonLabel:string     { "Start" }
        stopButtonLabel:string      { "Stop" }
        closeButtonLabel:string     { "Close" }
    }

    schedulePlaylistWindow:table
    {
        windowTitle:string          { "Schedule Playlist" }

        hourLabel:string            { "hour: " }
        minuteLabel:string          { "minute: " }
        scheduleButtonLabel:string  { "schedule" }
        closeButtonLabel:string     { "close" }
    }

    searchWindow:table
    {
        windowTitle:string          { "Search/Browse" }
        
        searchWhereLabel:string     { "Search or browse on: " }
        searchWhereLocal:string     { "local storage" }
        searchWhereRemote:string    { "network hub" }

        simpleSearchTab:string      { "Search" }
        advancedSearchTab:string    { "Advanced Search" }
        browseTab:string            { "Browse" }
        transportsTab:string        { "Transfers" }
        
        searchButtonLabel:string    { "Search" }
        
        typeColumnLabel:string      { "Type" }
        titleColumnLabel:string     { "Title" }
        creatorColumnLabel:string   { "Creator" }
        lengthColumnLabel:string    { "Length" }
        
        allStringForBrowse          { "--- all ---" }
        
        addToScratchpadMenuItem:string  { "_Add To Scratchpad" }
        addToLiveModeMenuItem:string    { "Add To _Live Mode" }
        exportPlaylistMenuItem:string   { "E_xport Playlist" }
        uploadToHubMenuItem:string      { "Upload to the network hub" }
        downloadFromHubMenuItem:string  { "Download from the network hub" }
        
        pleaseWaitMsg:string        { "Please wait..." }
        remoteSearchErrorMsg:string { "Search failed: {0}." }
        uploadToHubErrorMsg:string      { "Uploading to hub failed: {0}." }
        downloadFromHubErrorMsg:string  { "Downloading from hub failed: {0}." }
    }
    
    advancedSearchEntry:table {
        fileTypeTextLabel:string    { "File types" }
        allFileType:string          { "all" }
        audioClipFileType:string    { "audio clips" }
        playlistFileType:string     { "playlists" }
        
        searchByTextLabel:string    { "Search by" }
        
        partialOperatorDisplay:string
                                    { "contains" }
        prefixOperatorDisplay:string
                                    { "starts with" }
        =OperatorDisplay:string     { "equals" }
        <=OperatorDisplay:string    { "<=" }
        >=OperatorDisplay:string    { ">=" }
    }    

    liveModeWindow:table
    {
        windowTitle:string          { "Live Mode" }
        
        cueMenuItem:string              { "Pre_view" }
        upMenuItem:string               { "Move _Up" }
        downMenuItem:string             { "Move D_own" }
        removeMenuItem:string           { "_Remove" }
        playMenuItem:string             { "_Play" }
        exportPlaylistMenuItem:string   { "E_xport Playlist" }
        uploadToHubMenuItem:string      { "Upload to the network hub" }
        
        cuePlayerLabel:string       { "Preview" }
    }
    
    optionsWindow:table
    {
        windowTitle:string          { "Options" }
        
        needToRestartMsg:string     { "You will need to restart the "
                                      "application\nfor the new settings "
                                      "to take effect." }
        errorMsg:string             { "Could not save the options: " }
        
        soundSectionLabel:string    { "Sound" }
        keyBindingsSectionLabel:string
                                    { "Keyboard Shortcuts" }
        serversSectionLabel:string  { "Servers" }
        backupSectionLabel:string   { "Backup" }
        aboutSectionLabel:string    { "About" }

        cancelButtonLabel:string    { "Cancel" }
        applyButtonLabel:string     { "Apply" }
        okButtonLabel:string        { "OK" }
        
        cueDeviceLabel:string       { "Cue audio device:" }
        outputDeviceLabel:string    { "Live Mode audio device:" }
        testButtonLabel:string      { "Test" }
        
        pressAKeyMsg:string         { "Press a key..." }
        keyBindingsInstructionsText:string
                                    { "Double-click on the shortcut you want "
                                      "to change, \n"
                                      "then press the key for the new "
                                      "shortcut\n"
                                      "(or press the Escape key to cancel "
                                      "the operation)." }
        
        authenticationLabel:string  { "Authentication server" }
        storageLabel:string         { "Storage server" }
        serverLabel:string          { "address:" }
        portLabel:string            { "port:" }
        pathLabel:string            { "path:" }
        
        reportBugsToText:string     { "Report bugs to: {0}" }
    }

    backupView:table
    {
        workingStatus:string        { "in progress" }
        successStatus:string        { "ready" }
        faultStatus:string          { "error: {0}" }
    
        titleColumnLabel:string     { "Title" }
        dateColumnLabel:string      { "Date" }
        statusColumnLabel:string    { "Status" }
        
        mtimeTextLabel:string       { "Modified since:" }
        chooseTimeButtonLabel:string    { "Choose time" }
        resetTimeButtonLabel:string     { "Reset" }
        
        backupButtonLabel:string    { "Backup" }
        deleteButtonLabel:string    { "Delete" }
        saveButtonLabel:string      { "Save" }
        
        backupTitleLabel:string     { "Title" }
        defaultBackupTitle:string   { "new backup" }
        
        fileChooserDialogTitle:string   { "Save File" }
        backupErrorMsg:string       { "Backup error: " }
    }

    dateTimeChooserWindow:table
    {
        windowTitle:string          { "Select the date and time" }
        
        cancelButtonLabel:string    { "Cancel" }
        okButtonLabel:string        { "OK" }
        
        hourLabel:string            { "hour:" }
        minuteLabel:string          { "minute:" }
    }

    exportPlaylistWindow:table
    {
        windowTitle:string          { "Export Playlist" }
        
        playlistTitleLabel:string   { "Title:" }
        formatLabel:string          { "Export as:" }
        
        cancelButtonLabel:string    { "Cancel" }
        saveButtonLabel:string      { "Save" }
        
        internalFormatName:string   { "LiveSupport archive" }
        smilFormatName:string       { "tar containing a SMIL" }
        
        fileChooserDialogTitle:string   { "Save File" }
        
        createExportErrorMsg:string { "Could not export the playlist:" }
        saveExportErrorMsg:string   { "Could not save the exported playlist." }
    }

    transportList:table
    {
        workingStatus:string        { "in progress" }
        successStatus:string        { "ready" }
        faultStatus:string          { "error: {0}" }
    
        titleColumnLabel:string     { "Title" }
        dateColumnLabel:string      { "Date" }
        statusColumnLabel:string    { "Status" }
        
        cancelUploadMenuItem:string     { "Cancel upload" }
        cancelDownloadMenuItem:string   { "Cancel download" }
        
        cannotCancelTransportMsg:string { "Canceling failed: {0}." }
    }

    metadataTypes:table
    {
        title:string                { "Title" }
        creator:string              { "Creator" }
        album:string                { "Album" }
        year:string                 { "Year" }
        genre:string                { "Genre" }
        description:string          { "Description" }
        format:string               { "Format" }
        length:string               { "Length" }
        bpm:string                  { "BPM" }
        rating:string               { "Rating" }
        encoded_by:string           { "Encoded by" }
        track_number:string         { "Track number" }
        disc_number:string          { "Disc number" }
        mood:string                 { "Mood" }
        publishing_label:string     { "Publishing label" }
        composer:string             { "Composer" }
        bitrate:string              { "Bitrate" }
        channels:string             { "Channels" }
        sample_rate:string          { "Sample rate" }
        encoding_software:string    { "Encoding software" }
        checksum:string             { "Checksum" }
        lyrics:string               { "Lyrics" }
        orchestra_or_band:string    { "Orchestra or band" }
        conductor:string            { "Conductor" }
        lyricist:string             { "Lyricist" }
        original_lyricist:string    { "Original lyricist" }
        radio_station_name:string   { "Radio station name" }
        audio_file_info_url:string  { "File info web page" }
        artist_url:string           { "Artist web page" }
        audio_source_url:string     { "Source web page" }
        radio_station_url:string    { "Radio station web page" }
        buy_cd_url:string           { "Buy CD web page" }
        isrc_number:string          { "ISRC number" }
        catalog_number:string       { "Catalog number" }
        original_artist:string      { "Original artist" }
        copyright:string            { "Copyright" }
        report_date_time:string     { "Report date/time" }
        report_location:string      { "Report location" }
        report_organizations:string { "Report organizations" }
        subject                     { "Subject" }
    }
    
    keyboardShortcuts:table
    {
        playAudio:string            { Play }
        pauseAudio:string           { Pause }
        stopAudio:string            { Stop }
        nextTrack:string            { Next track }
        fadeOut:string              { Fade out }
        moveItemUp:string           { Move item up }
        moveItemDown:string         { Move item down }
        removeItem:string           { Remove item }
    }
}

